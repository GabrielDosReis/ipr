// -*- C++ -*-
//
// This file is part of The Pivot framework.
// Written by Gabriel Dos Reis.
// See LICENSE for copright and license notices.
//


// The existence of these enumerators reflect a weakness in the implementation
// language (C++), for their purposes is only to convert types to runtime 
// values, and vice versa, while supporting constant time dispatch.

Unknown,                            // ipr::Node    -- abstract
Annotation,                         // ipr::Annotation
Region,                             // ipr::Region
Comment,                            // ipr::Comment
String,                             // ipr::String
Linkage,                            // ipr::Linkage
Parameter_list,                     // ipr::Parameter_list

Overload,                           // ipr::Overload

Array,                              // ipr::Array
Class,                              // ipr::Class
Decltype,                           // ipr::Decltype
As_type,                            // ipr::As_type
Enum,                               // ipr::Enum
Function,                           // ipr::Function
Namespace,                          // ipr::Namespace
Pointer,                            // ipr::Pointer
Ptr_to_member,                      // ipr::Ptr_to_member
Product,                            // ipr::Product
Qualified,                          // ipr::Qualified
Reference,                          // ipr::Reference
Rvalue_reference,                   // ipr::Rvalue_reference
Sum,                                // ipr::Sum
Forall,                             // ipr::Forall
Union,                              // ipr::Union
Auto,                               // ipr::Auto
Closure,                            // ipr::Closure

Identifier,                         // ipr::Identifier
Operator,                           // ipr::Operator
Suffix,                             // ipr::Suffix
Conversion,                         // ipr::Conversion
Template_id,                        // ipr::Template_id
Type_id,                            // ipr::Type_id
Ctor_name,                          // ipr::Ctor_name
Dtor_name,                          // ipr::Dtor_name
Guide_name,                         // ipr::Guide_name
Rname,                              // ipr::Rname

Phantom,                            // ipr::Phantom
Eclipsis,                           // ipr::Eclipsis
This,                               // ipr::This
Lambda,                             // ipr::Lambda

Symbol,                             // ipr::Symbol
Address,                            // ipr::Address
Array_delete,                       // ipr::Array_delete
Complement,                         // ipr::Complement
Delete,                             // ipr::Delete
Demotion,                           // ipr::Demotion
Deref,                              // ipr::Deref
Expr_list,                          // ipr::Expr_list
Sizeof,                             // ipr::Sizeof
Typeid,                             // ipr::Typeid
Id_expr,                            // ipr::Id_expr
Label,                              // ipr::Label
Materialization,                    // ipr::Materialization
Not,                                // ipr::Not
Enclosure,                          // ipr::Enclosure
Post_decrement,                     // ipr::Post_decrement
Post_increment,                     // ipr::Post_increment
Pre_decrement,                      // ipr::Pre_decrement
Pre_increment,                      // ipr::Pre_increment
Promotion,                          // ipr::Promotion
Read,                               // ipr::Read
Throw,                              // ipr::Throw
Unary_minus,                        // ipr::Unary_minus
Unary_plus,                         // ipr::Unary_plus
Expansion,                          // ipr::Expansion
Noexcept,                           // ipr::Noexcept
Args_cardinality,                   // ipr::Args_cardinality

Scope_ref,                          // ipr::Scope_ref
Plus,                               // ipr::Plus
Plus_assign,                        // ipr::Plus_assign
And,                                // ipr::And
Array_ref,                          // ipr::Array_ref
Arrow,                              // ipr::Arrow
Arrow_star,                         // ipr::Arrow_star
Assign,                             // ipr::Assign
Bitand,                             // ipr::Bitand
Bitand_assign,                      // ipr::Bitand_assign
Bitor,                              // ipr::Bitor
Bitor_assign,                       // ipr::Bitor_assign
Bitxor,                             // ipr::Bitxor
Bitxor_assign,                      // ipr::Bitxor_assign
Call,                               // ipr::Call
Cast,                               // ipr::Cast
Coercion,                           // ipr::Coercion
Comma,                              // ipr::Comma
Const_cast,                         // ipr::Const_cast
Construction,                       // ipr::Construction
Div,                                // ipr::Div
Div_assign,                         // ipr::Div_assign
Dot,                                // ipr::Dot
Dot_star,                           // ipr::Dot_star
Dynamic_cast,                       // ipr::Dynamic_cast
Equal,                              // ipr::Equal
Greater,                            // ipr::Greater
Greater_equal,                      // ipr::Greater_equal
Less,                               // ipr::Less
Less_equal,                         // ipr::Less_equal
Literal,                            // ipr::Literal
Lshift,                             // ipr::Lshift
Lshift_assign,                      // ipr::Lshift_assign
Mapping,                            // ipr::Mapping
Member_init,                        // ipr::Member_init
Modulo,                             // ipr::Modulo
Modulo_assign,                      // ipr::Modulo_assign
Mul,                                // ipr::Mul
Mul_assign,                         // ipr::Mul_assign
Narrow,                             // ipr::Narrow
Not_equal,                          // ipr::Not_equal
Or,                                 // ipr::Or
Pretend,                            // ipr::Pretend
Qualification,                      // ipr::Qualification
Reinterpret_cast,                   // ipr::Reinterpret_cast
Rshift,                             // ipr::Rshift,
Rshift_assign,                      // ipr::Rshift_assign
Static_cast,                        // ipr::Static_cast
Widen,                              // ipr::Widen
Minus,                              // ipr::Minus
Minus_assign,                       // ipr::Minus_assign
Binary_fold,                        // ipr::Binary_fold

New,                                // ipr::New
Conditional,                        // ipr::Conditional
Scope,                              // ipr::Scope

Block,                              // ipr::Block
Break,                              // ipr::Break
Continue,                           // ipr::Continue
Ctor_body,                          // ipr::Ctor_body
Do,                                 // ipr::Do
Expr_stmt,                          // ipr::Expr_stmt,
For,                                // ipr::For
For_in,                             // ipr::For_in
Goto,                               // ipr::Goto
Handler,                            // ipr::Handler
If,                                 // ipr::If
Labeled_stmt,                       // ipr::Labeled_stmt
Return,                             // ipr::Return
Switch,                             // ipr::Switch
While,                              // ipr::While

Alias,                              // ipr::Alias
Asm,                                // ipr::Asm
Base_type,                          // ipr::Base_type
Enumerator,                         // ipr::Enumerator
Field,                              // ipr::Field
Bitfield,                           // ipr::Bitfield
Fundecl,                            // ipr::Fundecl
Template,                           // ipr::Template
Parameter,                          // ipr::Parameter
Typedecl,                           // ipr::Typedecl
Var,                                // ipr::Var
Using_directive,                    // ipr::Using_directive

Unit,                               // ipr::Unit

last_code_cat

